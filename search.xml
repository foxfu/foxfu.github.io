<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>兑换码生成算法相关</title>
      <link href="/2019/06/12/coupon-code-algorithm/"/>
      <url>/2019/06/12/coupon-code-algorithm/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>产品业务上最近有新人礼相关的需求，其中为了和公众号交互上的考虑需要使用类似团购“兑换码”的机制，于是在开发过程中就牵涉到如何生成大量随机且不唯一的兑换码的问题，同时还要考虑兑换码的验证等问题，虽然性能上暂时不需要考虑太多，毕竟小作坊注册的人不会很多，时间也紧迫，但兑换码的生成算法深入研究一下确实很有意思，比如今天看到有人说美团用到的<strong>“线性同余产生随机数”</strong>的算法，有时间再慢慢补上最后项目里的最终选择细节。<br>参考资料：</p><blockquote><p><a href="http://www.asmedu.net/algorithm.jsp?index=46" target="_blank" rel="noopener">http://www.asmedu.net/algorithm.jsp?index=46</a><br><a href="https://www.cnblogs.com/zrhai/p/4071023.html" target="_blank" rel="noopener">https://www.cnblogs.com/zrhai/p/4071023.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> IT技术相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>angularjs中post上传文件</title>
      <link href="/2019/06/05/post-with-file/"/>
      <url>/2019/06/05/post-with-file/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>目前的HTC公众号里的H5页面用到的是<a href="http://jqweui.com/" target="_blank" rel="noopener">jqueryweui</a>，原本想着只是先这么将就用着，后期结合小程序的跟进准备选个成熟点通用点的框架，哪知现在越走越远。鉴于要把主要功能先搭好，这次准备倒腾图片或视频的上传功能，原先的代码里用到的一个带编辑功能的jquery插件<a href="https://github.com/fengyuanchen/cropperjs" target="_blank" rel="noopener">cropperjs</a>想想还是简单点直接砍掉算了，中国的用户不是应该更喜欢在手机上用功能更强大的软件把图片或视频编辑好以后再上传的吗？何必再搞这么个鸡肋。</p><hr><p>当前用到的图片上传组件只有样式没有功能，我又不想花时间倒腾第三方如webuploader之类的东东<br><img src="https://ws1.sinaimg.cn/large/6dec2b67gy1g3qea8xmbqj20yu0mo78q.jpg" alt><br>于是先参照网上有人自己改的功能先照样加进去<br>原文参考</p><blockquote><p><a href="https://blog.csdn.net/wuyuander/article/details/88566172" target="_blank" rel="noopener">https://blog.csdn.net/wuyuander/article/details/88566172</a><br>至少有了图片预览，后面慢慢决定改成angularjs版本</p></blockquote><hr><p>搞定了样式开始顺带学一下怎么在前端post上传文件到后台的webapi。经过尝试，针对form表单以及普通的div上传在前端的处理还是有点不一样。<br>参考&gt;<a href="https://www.jianshu.com/p/46e6e03a0d53" target="_blank" rel="noopener">https://www.jianshu.com/p/46e6e03a0d53</a><br>使用form表单初始化FormData对象方式上传文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;form id=&quot;uploadForm&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">    &lt;input id=&quot;file&quot; type=&quot;file&quot; name=&quot;file&quot;/&gt;</span><br><span class="line">    &lt;button id=&quot;upload&quot; type=&quot;button&quot;&gt;upload&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p><p>js代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url: &apos;/upload&apos;,</span><br><span class="line">    type: &apos;POST&apos;,</span><br><span class="line">    cache: false,</span><br><span class="line">    data: new FormData($(&apos;#uploadForm&apos;)[0]),</span><br><span class="line">    processData: false,</span><br><span class="line">    contentType: false</span><br><span class="line">&#125;).done(function(res) &#123;</span><br><span class="line">&#125;).fail(function(res) &#123;&#125;);</span><br></pre></td></tr></table></figure></p><hr><p>使用普通div的情况<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;uploadForm&quot;&gt;</span><br><span class="line">    &lt;input id=&quot;file&quot; type=&quot;file&quot;/&gt;</span><br><span class="line">    &lt;button id=&quot;upload&quot; type=&quot;button&quot;&gt;upload&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>这是我的页面里的情况，相应的js代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var formData = new FormData();</span><br><span class="line">formData.append(&apos;file&apos;, $(&apos;#uploader_input&apos;))[0].files[0]);</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">    url: &apos;/api/resource/comments/uploadmedia&apos;,</span><br><span class="line">    type: &apos;POST&apos;,</span><br><span class="line">    cache: false,</span><br><span class="line">    data: formData,</span><br><span class="line">    processData: false,</span><br><span class="line">    contentType: false</span><br><span class="line">&#125;).done(function (res) &#123;</span><br><span class="line">    console.log(&apos;success&apos;, res);</span><br><span class="line">&#125;).fail(function (res) &#123;</span><br><span class="line">    console.log(&apos;failed&apos;, res);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>如果页面中的form存在action也可以在submit时进行异步的post操作，例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;#formId&quot;).submit(function (e) &#123;</span><br><span class="line">    e.preventDefault();</span><br><span class="line">    $.post($(this).attr(&apos;action&apos;), $(this).serialize(), function (d) &#123;</span><br><span class="line">        //Success逻辑</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><hr><p>既然已经在使用angularjs了，相应的$http理应也有相应的封装操作吧，研究+实验了一把后也可以了：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$http(&#123;</span><br><span class="line">    method: &apos;post&apos;,</span><br><span class="line">    url: &apos;/api/resource/comments/uploadmedia&apos;,</span><br><span class="line">    headers: &#123;</span><br><span class="line">        &apos;Content-Type&apos;: undefined</span><br><span class="line">    &#125;,</span><br><span class="line">    data: &#123;</span><br><span class="line">        file: $(&apos;#uploader_input&apos; ))[0].files[0]</span><br><span class="line">    &#125;,</span><br><span class="line">    uploadEventHandlers: &#123;</span><br><span class="line">        progress: function (e) &#123;</span><br><span class="line">            $scope.progressValue = new Number(e.loaded * 100 / e.total).toFixed(0);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    transformRequest: function (data, headersGetter) &#123;</span><br><span class="line">        var formData = new FormData();</span><br><span class="line">        angular.forEach(data, function (value, key) &#123;</span><br><span class="line">            formData.append(key, value);</span><br><span class="line">        &#125;);</span><br><span class="line">        return formData;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).then(function (res) &#123;</span><br><span class="line">    console.log(&apos;success&apos;, res);</span><br><span class="line">&#125;, function (res) &#123;</span><br><span class="line">    console.log(&apos;failed&apos;, res);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>顺带玩儿了一把事件监听，可以对于文件的上传有个百分比的反馈，当然这里的进度只反馈了从前端加载发送到后端的情况，并未反应后端webapi上传逻辑里的进度。<br>可以看到几个主要的地方：</p><ul><li>‘Content-Type’要设置成undefined</li><li>需要有transformRequest里的逻辑进行处理</li></ul><hr><p>至此，简单版本的H5图片和视频的上传功能完成了。</p>]]></content>
      
      
      <categories>
          
          <category> IT技术相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AngularJs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Angularjs ngRoute 小试牛刀</title>
      <link href="/2019/05/23/angularjs-route/"/>
      <url>/2019/05/23/angularjs-route/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>HTC的业务逻辑页面虽然不是很多，但SPA中的路由是不可避免地要小小学习一下，正好在设计评论页面时想借这机会和明细页面一起用AngularJs自带的ngRoute来根据不同路由加载不同template的目的。<br>我最初所设想的路由很简单：</p><ul><li>产品列表 “/list”</li><li>产品明细 “/{pid}”</li><li>产品评论 “/{pid}/comment”</li></ul><p>但随后想想后续有上传等其他路由需求，因而决定稍微灵活一点（最好引入正则，但短期并不需要故先搁下），查了下资料并做尝试，最终的大概代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">angular.config([&apos;$routeProvider&apos;,</span><br><span class="line">            function config($routeProvider) &#123;</span><br><span class="line">                $routeProvider.</span><br><span class="line">                    when(&apos;/list&apos;, &#123;</span><br><span class="line">                        template: &apos;&lt;product-list&gt;&lt;/product-list&gt;&apos;</span><br><span class="line">                    &#125;).</span><br><span class="line">                    when(&apos;/:productId/:operation?&apos;, &#123;</span><br><span class="line">                        template: getProductOperationTemplate</span><br><span class="line">                    &#125;).</span><br><span class="line">                    otherwise(&apos;/list&apos;);</span><br><span class="line">            &#125;</span><br><span class="line">        ])</span><br></pre></td></tr></table></figure></p><p>其中用一个全局的方法来根据路由参数选择不同template</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">function getProductOperationTemplate(data) &#123;</span><br><span class="line">    console.log(data);</span><br><span class="line">    if (!data.operation) data.operation = &apos;detail&apos;;//default</span><br><span class="line">    switch (data.operation) &#123;</span><br><span class="line">        case &apos;upload&apos;:</span><br><span class="line">            return &apos;&lt;user-upload&gt;&lt;/user-upload&gt;&apos;;</span><br><span class="line">            break;</span><br><span class="line">        case &apos;comment&apos;:</span><br><span class="line">            return &apos;&lt;user-comment&gt;&lt;/user-comment&gt;&apos;;</span><br><span class="line">            break;</span><br><span class="line">        case &apos;detail&apos;:</span><br><span class="line">            return &apos;&lt;product-detail&gt;&lt;/product-detail&gt;&apos;;</span><br><span class="line">            break;</span><br><span class="line">        default:</span><br><span class="line">            return &apos;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    //return &apos;&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在controller部分可以使用<strong>$route.updateParams({ operation: ‘comment’ }); 或 $location.path($scope.productId + ‘/comment’);</strong>来动态更新路由。<br>若需要更灵活地管理路由，根据网上的说法可以监听相关事件触发时进行路由跳转，这样可以用正则匹配等进行控制，考虑目前还不需要因而也未进行相关尝试。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">angular.config()</span><br><span class="line">.run([&apos;$rootScope&apos;,&apos;$location&apos;,function($rootScope,$location)&#123;</span><br><span class="line">    $rootScope.$on(&apos;$locationChangeStart&apos;,function(event,next,current)&#123;</span><br><span class="line">        //......</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;]);</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> IT技术相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AngularJs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Angularjs directive 仿大众点评评分</title>
      <link href="/2019/05/20/angularjs-directive-htc-star/"/>
      <url>/2019/05/20/angularjs-directive-htc-star/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>HTC的现有AngularJS+Asp.net MVC的杂乱架构已经无力吐槽了，在我看来最佳重构的方式就是重新写一套新的😂<br>但既然领导层那么佛性，我也就慢慢边学新东西边改造现有的代码吧。<br>在把现有的Asp.net MVC移动端Bootstrap适配页面进行相应的H5单页面的过程中，逻辑的梳理暂时决定放在之后再搞，先把基本的简单功能转好再说，其中有一个关于产品的评分打星功能我觉得还是可以抽出来进行后期复用的，因而把它做成一个单独的directive是个很自然的方式了，初步的想法是接受一个分数值（比如3.5分）并显示相应的打星状况，类似于大众点评或豆瓣电影的总计评分。<br>有了初步想法就开搞：</p><h4 id="Directive部分"><a href="#Directive部分" class="headerlink" title="Directive部分"></a>Directive部分</h4><p>对于Directive部分之前我印象中做过的项目都是直接复制现成的做小修改，这次既然是新的（很遗憾现有的HTC项目里竟然都没有剥离出可复用的directive，真是服了安德拉带领的这些混日子的），决定小小研究一下一些必要的参数，查阅了网上某篇关于directive中参数的说明</p><blockquote><p><a href="http://blog.51yip.com/jsjquery/1607.html" target="_blank" rel="noopener">http://blog.51yip.com/jsjquery/1607.html</a></p></blockquote><p>最终的directive为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//Directives</span><br><span class="line">angular.directive(&apos;htcStar&apos;, function () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">        restrict: &apos;EA&apos;,</span><br><span class="line">        templateUrl: &apos;/templates/htc-star.template.html&apos;,</span><br><span class="line">        scope: &#123;</span><br><span class="line">            starRating: &apos;@&apos;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h4 id="Template部分"><a href="#Template部分" class="headerlink" title="Template部分"></a>Template部分</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;starwrapper&quot;&gt;</span><br><span class="line">    &lt;span class=&quot;&quot; star-rating=&quot;&#123;&#123;starRating&#125;&#125;&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;fa fa-star&quot; ng-class=&quot;&#123;&apos;fa-star-open&apos; : starRating&lt;1&#125;&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;fa fa-star fa-star-percentage&quot; ng-if=&quot;starRating&gt;0 &amp;&amp; starRating&lt;1&quot; ng-style=&quot;&#123;&apos;width&apos;:&apos;&#123;&#123;starRating*100&#125;&#125;%&apos;&#125;&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">        &lt;span class=&quot;fa fa-star&quot; ng-class=&quot;&#123;&apos;fa-star-open&apos; : starRating&lt;2&#125;&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;fa fa-star fa-star-percentage&quot; ng-if=&quot;starRating&gt;1 &amp;&amp; starRating&lt;2&quot; ng-style=&quot;&#123;&apos;width&apos;:&apos;&#123;&#123;(starRating - 1)*100&#125;&#125;%&apos;&#125;&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">        &lt;span class=&quot;fa fa-star&quot; ng-class=&quot;&#123;&apos;fa-star-open&apos; : starRating&lt;3&#125;&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;fa fa-star fa-star-percentage&quot; ng-if=&quot;starRating&gt;2 &amp;&amp; starRating&lt;3&quot; ng-style=&quot;&#123;&apos;width&apos;:&apos;&#123;&#123;(starRating - 2)*100&#125;&#125;%&apos;&#125;&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">        &lt;span class=&quot;fa fa-star&quot; ng-class=&quot;&#123;&apos;fa-star-open&apos; : starRating&lt;4&#125;&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;fa fa-star fa-star-percentage&quot; ng-if=&quot;starRating&gt;3 &amp;&amp; starRating&lt;4&quot; ng-style=&quot;&#123;&apos;width&apos;:&apos;&#123;&#123;(starRating - 3)*100&#125;&#125;%&apos;&#125;&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">        &lt;span class=&quot;fa fa-star&quot; ng-class=&quot;&#123;&apos;fa-star-open&apos; : starRating&lt;5&#125;&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;fa fa-star fa-star-percentage&quot; ng-if=&quot;starRating&gt;4 &amp;&amp; starRating&lt;5&quot; ng-style=&quot;&#123;&apos;width&apos;:&apos;&#123;&#123;(starRating - 4)*100&#125;&#125;%&apos;&#125;&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">        &lt;span&gt;&#123;&#123;starRating&#125;&#125;&lt;/span&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h4 id="相关CSS"><a href="#相关CSS" class="headerlink" title="相关CSS"></a>相关CSS</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">.starwrapper .fa &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.starwrapper .fa-star &#123;</span><br><span class="line">    color: #0edb73;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.starwrapper .fa-star-open &#123;</span><br><span class="line">    color: #cacaca;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.fa-star-percentage &#123;</span><br><span class="line">    color: #CCCCCC</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.starwrapper .fa-star-percentage &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: 0;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">    margin: 0px !important;</span><br><span class="line">    left: 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后在需要显示评分的页面加入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;htc-star star-rating=&apos;&#123;&#123;p.StarRating&#125;&#125;&apos;&gt;&lt;/htc-star&gt;</span><br></pre></td></tr></table></figure></p><p>即可显示最终效果：<br><img src="https://ws1.sinaimg.cn/large/6dec2b67ly1g37wjtvvoij208k036aa3.jpg" alt></p>]]></content>
      
      
      <categories>
          
          <category> IT技术相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AngularJs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Angularjs 填坑记 0520</title>
      <link href="/2019/05/20/angularjs-issue-fix/"/>
      <url>/2019/05/20/angularjs-issue-fix/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="AngularJS-填坑记-1-Factory-method-call-issue"><a href="#AngularJS-填坑记-1-Factory-method-call-issue" class="headerlink" title="AngularJS 填坑记 - 1 - Factory method call issue"></a>AngularJS 填坑记 - 1 - Factory method call issue</h1><p>在将老项目进行局部SPA化的过程中试图抽离数据访问的过程中莫名遇到个诡异的问题，页面最底部实现了滚动加载，但转成每次用抽离的服务方法进行调用时却返回的response中始终时第一页的数据，经过查询与测试解决，特此纪念。</p><h4 id="Controller-调用部分"><a href="#Controller-调用部分" class="headerlink" title="Controller 调用部分"></a>Controller 调用部分</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">angular.controller(&apos;MainController&apos;, function ($scope, $http, $q, htcDataService) &#123;</span><br><span class="line">........</span><br><span class="line">    //Methods</span><br><span class="line">    $scope.getProducts = function (append, isFromSearch) &#123;</span><br><span class="line">        $.showLoading();</span><br><span class="line">        $scope.isLoading = true;</span><br><span class="line">        htcDataService.getProducts($scope.qs.page, $scope.qs.keyword)</span><br><span class="line">            .then(function (response) &#123;</span><br><span class="line">                $.hideLoading();</span><br><span class="line">                if (response &amp;&amp; response.data &amp;&amp; response.data.length &gt; 0) &#123;</span><br><span class="line">                    //console.log(&apos;htcDataService.getProducts - &apos; + response.data.length);</span><br><span class="line">                    if (append) &#123;</span><br><span class="line">                        for (var i = 0; i &lt; response.data.length; i++) &#123;</span><br><span class="line">                            $scope.products.push(response.data[i]);//此处response始终返回第一次成功的第一页数据？？</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        $scope.products = [];</span><br><span class="line">                        _.forEach(response.data, function (item) &#123;</span><br><span class="line">                            $scope.products.push(item);</span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    //No need to load more</span><br><span class="line">                    if (isFromSearch || response.data.length == 0) &#123;</span><br><span class="line">                        $scope.infiniteOff();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    //No data found</span><br><span class="line">                    $scope.infiniteOff();</span><br><span class="line">                &#125;</span><br><span class="line">                $scope.searchHintMsg = isFromSearch ? &quot;(搜索到&quot; + response.data.length + &quot;条结果)&quot; : &quot;&quot;;</span><br><span class="line">                $scope.isLoading = false;</span><br><span class="line">            &#125;, function (response) &#123;</span><br><span class="line">                $.hideLoading();</span><br><span class="line">                // error  </span><br><span class="line">                console.log(response);</span><br><span class="line">                $.toast(&quot;加载失败&quot;, &quot;forbidden&quot;);</span><br><span class="line">                $scope.searchHintMsg = &quot;&quot;;</span><br><span class="line">                $scope.isLoading = false;</span><br><span class="line">            &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="factory方法代码片段"><a href="#factory方法代码片段" class="headerlink" title="factory方法代码片段"></a>factory方法代码片段</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">angular.factory(&apos;htcDataService&apos;, function ($http, $q) &#123;</span><br><span class="line">    var apiRoot = &apos;/api/resource&apos;;</span><br><span class="line">    //var deferred = $q.defer();//放在此处会有问题，每次都是取的同一数据</span><br><span class="line"></span><br><span class="line">    var service = &#123;    // our factory definition</span><br><span class="line">        user: &#123;&#125;,</span><br><span class="line">        getProducts: function (page, keyword) &#123;</span><br><span class="line">            var qs = &quot;?page=&quot; + page + &quot;&amp;keyword=&quot; + keyword;</span><br><span class="line">            var deferred = $q.defer();</span><br><span class="line">            $http(&#123;</span><br><span class="line">                method: &apos;get&apos;,</span><br><span class="line">                url: apiRoot + &apos;/product&apos; + qs</span><br><span class="line">            &#125;).then(function (data) &#123;</span><br><span class="line">                deferred.resolve(data);</span><br><span class="line">            &#125;, function (data) &#123;</span><br><span class="line">                deferred.reject(data);</span><br><span class="line">            &#125;);</span><br><span class="line">            return deferred.promise;</span><br><span class="line">        &#125;,</span><br><span class="line">.......</span><br><span class="line">    &#125;;</span><br><span class="line">    return service;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>经过多次测试，发现对于<code>var deferred = $q.defer();</code>的定义还是需要放在方法体内，放在外部会有问题。<br>PS，又是一年520，今天的成就是在蚂蚁森林抢了一块保护地😀</p>]]></content>
      
      
      <categories>
          
          <category> IT技术相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AngularJs </tag>
            
            <tag> 技术坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>张信哲-《初恋的地方》</title>
      <link href="/2019/04/18/the-place-of-first-love/"/>
      <url>/2019/04/18/the-place-of-first-love/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>最近偶然间在广播里听到哲哲的一首新歌，说新歌只是对自己而言的，毕竟是第一次听到，感觉很柔美，符合当下自己的品味。<br>于是进入老套路：<strong>搜歌-&gt;单曲循环-&gt;搜谱</strong><br>但貌似不是某人的菜，还说我老人了，可不是么，确实是跟哲哲一样老年人了 😹<br>Anyway I like it. 顺带把邓丽君的原版以及王菲的版本也都欣赏了一遍，感觉还是各有特色。</p>    <div id="aplayer-syKRtsXs" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="562592169" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> life </tag>
            
            <tag> music </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>💗欢迎访问M&amp;S💗</title>
      <link href="/2019/04/08/welcome/"/>
      <url>/2019/04/08/welcome/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>亲，欢迎访问M&amp;S的Blog！<br>这里将会记录我们生活的点滴，欢迎评论！<br>The site is created by Max with 💗!</p><p><img src="https://ws1.sinaimg.cn/large/6dec2b67ly1g1yqyva9wkj21y013dtg6.jpg" alt="Img"></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gossip </tag>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
