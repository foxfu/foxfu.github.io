{"meta":{"title":"M&S Life","subtitle":"心动不如行动，行动不如马上心动","description":null,"author":"M&S","url":"http://shenweihui.cn","root":"/"},"pages":[{"title":"gallery","date":"2019-04-12T08:27:15.000Z","updated":"2019-04-12T08:27:28.981Z","comments":true,"path":"gallery/index.html","permalink":"http://shenweihui.cn/gallery/index.html","excerpt":"","text":""},{"title":"关于M&S","date":"2019-04-10T08:11:03.000Z","updated":"2019-04-12T08:23:29.697Z","comments":true,"path":"about/index.html","permalink":"http://shenweihui.cn/about/index.html","excerpt":"","text":"坐标：🌎 上海 🌞简介：👉 这是一个记录M先生和S女士佛（懒）系（人）生活的博客网站 💗"},{"title":"tags","date":"2019-04-12T08:14:39.000Z","updated":"2019-04-12T08:14:50.476Z","comments":true,"path":"tags/index.html","permalink":"http://shenweihui.cn/tags/index.html","excerpt":"","text":""},{"title":"timeline","date":"2019-04-12T08:11:22.000Z","updated":"2019-04-12T08:11:56.565Z","comments":true,"path":"timeline/index.html","permalink":"http://shenweihui.cn/timeline/index.html","excerpt":"","text":""}],"posts":[{"title":"Angularjs 填坑记 0520","slug":"angularjs-issue-fix","date":"2019-05-20T08:38:57.000Z","updated":"2019-05-20T08:48:14.075Z","comments":true,"path":"2019/05/20/angularjs-issue-fix/","link":"","permalink":"http://shenweihui.cn/2019/05/20/angularjs-issue-fix/","excerpt":"","text":"AngularJS 填坑记 - 1 - Factory method call issue在将老项目进行局部SPA化的过程中试图抽离数据访问的过程中莫名遇到个诡异的问题，页面最底部实现了滚动加载，但转成每次用抽离的服务方法进行调用时却返回的response中始终时第一页的数据，经过查询与测试解决，特此纪念。 Controller 调用部分12345678910111213141516171819202122232425262728293031323334353637383940angular.controller(&apos;MainController&apos;, function ($scope, $http, $q, htcDataService) &#123; ........ //Methods $scope.getProducts = function (append, isFromSearch) &#123; $.showLoading(); $scope.isLoading = true; htcDataService.getProducts($scope.qs.page, $scope.qs.keyword) .then(function (response) &#123; $.hideLoading(); if (response &amp;&amp; response.data &amp;&amp; response.data.length &gt; 0) &#123; //console.log(&apos;htcDataService.getProducts - &apos; + response.data.length); if (append) &#123; for (var i = 0; i &lt; response.data.length; i++) &#123; $scope.products.push(response.data[i]);//此处response始终返回第一次成功的第一页数据？？ &#125; &#125; else &#123; $scope.products = []; _.forEach(response.data, function (item) &#123; $scope.products.push(item); &#125;); &#125; //No need to load more if (isFromSearch || response.data.length == 0) &#123; $scope.infiniteOff(); &#125; &#125; else &#123; //No data found $scope.infiniteOff(); &#125; $scope.searchHintMsg = isFromSearch ? &quot;(搜索到&quot; + response.data.length + &quot;条结果)&quot; : &quot;&quot;; $scope.isLoading = false; &#125;, function (response) &#123; $.hideLoading(); // error console.log(response); $.toast(&quot;加载失败&quot;, &quot;forbidden&quot;); $scope.searchHintMsg = &quot;&quot;; $scope.isLoading = false; &#125;); &#125; factory方法代码片段1234567891011121314151617181920212223angular.factory(&apos;htcDataService&apos;, function ($http, $q) &#123; var apiRoot = &apos;/api/resource&apos;; //var deferred = $q.defer();//放在此处会有问题，每次都是取的同一数据 var service = &#123; // our factory definition user: &#123;&#125;, getProducts: function (page, keyword) &#123; var qs = &quot;?page=&quot; + page + &quot;&amp;keyword=&quot; + keyword; var deferred = $q.defer(); $http(&#123; method: &apos;get&apos;, url: apiRoot + &apos;/product&apos; + qs &#125;).then(function (data) &#123; deferred.resolve(data); &#125;, function (data) &#123; deferred.reject(data); &#125;); return deferred.promise; &#125;, ....... &#125;; return service;&#125;); 经过多次测试，发现对于var deferred = $q.defer();的定义还是需要放在方法体内，放在外部会有问题。PS，又是一年520，今天的成就是在蚂蚁森林抢了一块保护地😀","categories":[{"name":"IT技术相关","slug":"IT技术相关","permalink":"http://shenweihui.cn/categories/IT技术相关/"}],"tags":[{"name":"AngularJs","slug":"AngularJs","permalink":"http://shenweihui.cn/tags/AngularJs/"},{"name":"技术坑","slug":"技术坑","permalink":"http://shenweihui.cn/tags/技术坑/"}]},{"title":"张信哲-《初恋的地方》","slug":"the-place-of-first-love","date":"2019-04-18T04:48:53.000Z","updated":"2019-04-18T07:10:32.041Z","comments":true,"path":"2019/04/18/the-place-of-first-love/","link":"","permalink":"http://shenweihui.cn/2019/04/18/the-place-of-first-love/","excerpt":"","text":"最近偶然间在广播里听到哲哲的一首新歌，说新歌只是对自己而言的，毕竟是第一次听到，感觉很柔美，符合当下自己的品味。于是进入老套路：搜歌-&gt;单曲循环-&gt;搜谱但貌似不是某人的菜，还说我老人了，可不是么，确实是跟哲哲一样老年人了 😹Anyway I like it. 顺带把邓丽君的原版以及王菲的版本也都欣赏了一遍，感觉还是各有特色。","categories":[{"name":"随笔","slug":"随笔","permalink":"http://shenweihui.cn/categories/随笔/"}],"tags":[{"name":"life","slug":"life","permalink":"http://shenweihui.cn/tags/life/"},{"name":"music","slug":"music","permalink":"http://shenweihui.cn/tags/music/"}]},{"title":"💗欢迎访问M&S💗","slug":"welcome","date":"2019-04-08T07:44:30.000Z","updated":"2019-04-18T07:48:12.334Z","comments":true,"path":"2019/04/08/welcome/","link":"","permalink":"http://shenweihui.cn/2019/04/08/welcome/","excerpt":"","text":"亲，欢迎访问M&amp;S的Blog！这里将会记录我们生活的点滴，欢迎评论！The site is created by Max with 💗!","categories":[{"name":"随笔","slug":"随笔","permalink":"http://shenweihui.cn/categories/随笔/"}],"tags":[{"name":"gossip","slug":"gossip","permalink":"http://shenweihui.cn/tags/gossip/"},{"name":"life","slug":"life","permalink":"http://shenweihui.cn/tags/life/"}]}]}