{"meta":{"title":"M&S Life","subtitle":"心动不如行动，行动不如马上心动","description":null,"author":"M&S","url":"http://shenweihui.cn","root":"/"},"pages":[{"title":"gallery","date":"2019-04-12T08:27:15.000Z","updated":"2019-04-12T08:27:28.981Z","comments":true,"path":"gallery/index.html","permalink":"http://shenweihui.cn/gallery/index.html","excerpt":"","text":""},{"title":"关于M&S","date":"2019-04-10T08:11:03.000Z","updated":"2019-04-12T08:23:29.697Z","comments":true,"path":"about/index.html","permalink":"http://shenweihui.cn/about/index.html","excerpt":"","text":"坐标：🌎 上海 🌞简介：👉 这是一个记录M先生和S女士佛（懒）系（人）生活的博客网站 💗"},{"title":"tags","date":"2019-04-12T08:14:39.000Z","updated":"2019-04-12T08:14:50.476Z","comments":true,"path":"tags/index.html","permalink":"http://shenweihui.cn/tags/index.html","excerpt":"","text":""},{"title":"timeline","date":"2019-04-12T08:11:22.000Z","updated":"2019-04-12T08:11:56.565Z","comments":true,"path":"timeline/index.html","permalink":"http://shenweihui.cn/timeline/index.html","excerpt":"","text":""}],"posts":[{"title":"Angularjs ngRoute 小试牛刀","slug":"angularjs-route","date":"2019-05-23T08:14:18.000Z","updated":"2019-05-23T08:35:31.611Z","comments":true,"path":"2019/05/23/angularjs-route/","link":"","permalink":"http://shenweihui.cn/2019/05/23/angularjs-route/","excerpt":"","text":"HTC的业务逻辑页面虽然不是很多，但SPA中的路由是不可避免地要小小学习一下，正好在设计评论页面时想借这机会和明细页面一起用AngularJs自带的ngRoute来根据不同路由加载不同template的目的。我最初所设想的路由很简单： 产品列表 “/list” 产品明细 “/{pid}” 产品评论 “/{pid}/comment” 但随后想想后续有上传等其他路由需求，因而决定稍微灵活一点（最好引入正则，但短期并不需要故先搁下），查了下资料并做尝试，最终的大概代码如下：123456789101112angular.config([&apos;$routeProvider&apos;, function config($routeProvider) &#123; $routeProvider. when(&apos;/list&apos;, &#123; template: &apos;&lt;product-list&gt;&lt;/product-list&gt;&apos; &#125;). when(&apos;/:productId/:operation?&apos;, &#123; template: getProductOperationTemplate &#125;). otherwise(&apos;/list&apos;); &#125; ]) 其中用一个全局的方法来根据路由参数选择不同template 123456789101112131415161718function getProductOperationTemplate(data) &#123; console.log(data); if (!data.operation) data.operation = &apos;detail&apos;;//default switch (data.operation) &#123; case &apos;upload&apos;: return &apos;&lt;user-upload&gt;&lt;/user-upload&gt;&apos;; break; case &apos;comment&apos;: return &apos;&lt;user-comment&gt;&lt;/user-comment&gt;&apos;; break; case &apos;detail&apos;: return &apos;&lt;product-detail&gt;&lt;/product-detail&gt;&apos;; break; default: return &apos;&apos;; &#125; //return &apos;&apos;;&#125; 在controller部分可以使用$route.updateParams({ operation: ‘comment’ }); 或 $location.path($scope.productId + ‘/comment’);来动态更新路由。若需要更灵活地管理路由，根据网上的说法可以监听相关事件触发时进行路由跳转，这样可以用正则匹配等进行控制，考虑目前还不需要因而也未进行相关尝试。123456angular.config().run([&apos;$rootScope&apos;,&apos;$location&apos;,function($rootScope,$location)&#123; $rootScope.$on(&apos;$locationChangeStart&apos;,function(event,next,current)&#123; //...... &#125;);&#125;]);","categories":[{"name":"IT技术相关","slug":"IT技术相关","permalink":"http://shenweihui.cn/categories/IT技术相关/"}],"tags":[{"name":"AngularJs","slug":"AngularJs","permalink":"http://shenweihui.cn/tags/AngularJs/"}]},{"title":"Angularjs 填坑记 0520","slug":"angularjs-issue-fix","date":"2019-05-20T08:38:57.000Z","updated":"2019-05-20T08:48:14.075Z","comments":true,"path":"2019/05/20/angularjs-issue-fix/","link":"","permalink":"http://shenweihui.cn/2019/05/20/angularjs-issue-fix/","excerpt":"","text":"AngularJS 填坑记 - 1 - Factory method call issue在将老项目进行局部SPA化的过程中试图抽离数据访问的过程中莫名遇到个诡异的问题，页面最底部实现了滚动加载，但转成每次用抽离的服务方法进行调用时却返回的response中始终时第一页的数据，经过查询与测试解决，特此纪念。 Controller 调用部分12345678910111213141516171819202122232425262728293031323334353637383940angular.controller(&apos;MainController&apos;, function ($scope, $http, $q, htcDataService) &#123; ........ //Methods $scope.getProducts = function (append, isFromSearch) &#123; $.showLoading(); $scope.isLoading = true; htcDataService.getProducts($scope.qs.page, $scope.qs.keyword) .then(function (response) &#123; $.hideLoading(); if (response &amp;&amp; response.data &amp;&amp; response.data.length &gt; 0) &#123; //console.log(&apos;htcDataService.getProducts - &apos; + response.data.length); if (append) &#123; for (var i = 0; i &lt; response.data.length; i++) &#123; $scope.products.push(response.data[i]);//此处response始终返回第一次成功的第一页数据？？ &#125; &#125; else &#123; $scope.products = []; _.forEach(response.data, function (item) &#123; $scope.products.push(item); &#125;); &#125; //No need to load more if (isFromSearch || response.data.length == 0) &#123; $scope.infiniteOff(); &#125; &#125; else &#123; //No data found $scope.infiniteOff(); &#125; $scope.searchHintMsg = isFromSearch ? &quot;(搜索到&quot; + response.data.length + &quot;条结果)&quot; : &quot;&quot;; $scope.isLoading = false; &#125;, function (response) &#123; $.hideLoading(); // error console.log(response); $.toast(&quot;加载失败&quot;, &quot;forbidden&quot;); $scope.searchHintMsg = &quot;&quot;; $scope.isLoading = false; &#125;); &#125; factory方法代码片段1234567891011121314151617181920212223angular.factory(&apos;htcDataService&apos;, function ($http, $q) &#123; var apiRoot = &apos;/api/resource&apos;; //var deferred = $q.defer();//放在此处会有问题，每次都是取的同一数据 var service = &#123; // our factory definition user: &#123;&#125;, getProducts: function (page, keyword) &#123; var qs = &quot;?page=&quot; + page + &quot;&amp;keyword=&quot; + keyword; var deferred = $q.defer(); $http(&#123; method: &apos;get&apos;, url: apiRoot + &apos;/product&apos; + qs &#125;).then(function (data) &#123; deferred.resolve(data); &#125;, function (data) &#123; deferred.reject(data); &#125;); return deferred.promise; &#125;, ....... &#125;; return service;&#125;); 经过多次测试，发现对于var deferred = $q.defer();的定义还是需要放在方法体内，放在外部会有问题。PS，又是一年520，今天的成就是在蚂蚁森林抢了一块保护地😀","categories":[{"name":"IT技术相关","slug":"IT技术相关","permalink":"http://shenweihui.cn/categories/IT技术相关/"}],"tags":[{"name":"AngularJs","slug":"AngularJs","permalink":"http://shenweihui.cn/tags/AngularJs/"},{"name":"技术坑","slug":"技术坑","permalink":"http://shenweihui.cn/tags/技术坑/"}]},{"title":"Angularjs directive 仿大众点评评分","slug":"angularjs-directive-htc-star","date":"2019-05-20T08:38:57.000Z","updated":"2019-05-23T08:15:31.182Z","comments":true,"path":"2019/05/20/angularjs-directive-htc-star/","link":"","permalink":"http://shenweihui.cn/2019/05/20/angularjs-directive-htc-star/","excerpt":"","text":"HTC的现有AngularJS+Asp.net MVC的杂乱架构已经无力吐槽了，在我看来最佳重构的方式就是重新写一套新的😂但既然领导层那么佛性，我也就慢慢边学新东西边改造现有的代码吧。在把现有的Asp.net MVC移动端Bootstrap适配页面进行相应的H5单页面的过程中，逻辑的梳理暂时决定放在之后再搞，先把基本的简单功能转好再说，其中有一个关于产品的评分打星功能我觉得还是可以抽出来进行后期复用的，因而把它做成一个单独的directive是个很自然的方式了，初步的想法是接受一个分数值（比如3.5分）并显示相应的打星状况，类似于大众点评或豆瓣电影的总计评分。有了初步想法就开搞： Directive部分对于Directive部分之前我印象中做过的项目都是直接复制现成的做小修改，这次既然是新的（很遗憾现有的HTC项目里竟然都没有剥离出可复用的directive，真是服了安德拉带领的这些混日子的），决定小小研究一下一些必要的参数，查阅了网上某篇关于directive中参数的说明 http://blog.51yip.com/jsjquery/1607.html 最终的directive为12345678910//Directivesangular.directive(&apos;htcStar&apos;, function () &#123; return &#123; restrict: &apos;EA&apos;, templateUrl: &apos;/templates/htc-star.template.html&apos;, scope: &#123; starRating: &apos;@&apos; &#125; &#125;;&#125;); Template部分1234567891011121314151617181920&lt;div class=&quot;starwrapper&quot;&gt; &lt;span class=&quot;&quot; star-rating=&quot;&#123;&#123;starRating&#125;&#125;&quot;&gt; &lt;span class=&quot;fa fa-star&quot; ng-class=&quot;&#123;&apos;fa-star-open&apos; : starRating&lt;1&#125;&quot;&gt; &lt;span class=&quot;fa fa-star fa-star-percentage&quot; ng-if=&quot;starRating&gt;0 &amp;&amp; starRating&lt;1&quot; ng-style=&quot;&#123;&apos;width&apos;:&apos;&#123;&#123;starRating*100&#125;&#125;%&apos;&#125;&quot;&gt;&lt;/span&gt; &lt;/span&gt; &lt;span class=&quot;fa fa-star&quot; ng-class=&quot;&#123;&apos;fa-star-open&apos; : starRating&lt;2&#125;&quot;&gt; &lt;span class=&quot;fa fa-star fa-star-percentage&quot; ng-if=&quot;starRating&gt;1 &amp;&amp; starRating&lt;2&quot; ng-style=&quot;&#123;&apos;width&apos;:&apos;&#123;&#123;(starRating - 1)*100&#125;&#125;%&apos;&#125;&quot;&gt;&lt;/span&gt; &lt;/span&gt; &lt;span class=&quot;fa fa-star&quot; ng-class=&quot;&#123;&apos;fa-star-open&apos; : starRating&lt;3&#125;&quot;&gt; &lt;span class=&quot;fa fa-star fa-star-percentage&quot; ng-if=&quot;starRating&gt;2 &amp;&amp; starRating&lt;3&quot; ng-style=&quot;&#123;&apos;width&apos;:&apos;&#123;&#123;(starRating - 2)*100&#125;&#125;%&apos;&#125;&quot;&gt;&lt;/span&gt; &lt;/span&gt; &lt;span class=&quot;fa fa-star&quot; ng-class=&quot;&#123;&apos;fa-star-open&apos; : starRating&lt;4&#125;&quot;&gt; &lt;span class=&quot;fa fa-star fa-star-percentage&quot; ng-if=&quot;starRating&gt;3 &amp;&amp; starRating&lt;4&quot; ng-style=&quot;&#123;&apos;width&apos;:&apos;&#123;&#123;(starRating - 3)*100&#125;&#125;%&apos;&#125;&quot;&gt;&lt;/span&gt; &lt;/span&gt; &lt;span class=&quot;fa fa-star&quot; ng-class=&quot;&#123;&apos;fa-star-open&apos; : starRating&lt;5&#125;&quot;&gt; &lt;span class=&quot;fa fa-star fa-star-percentage&quot; ng-if=&quot;starRating&gt;4 &amp;&amp; starRating&lt;5&quot; ng-style=&quot;&#123;&apos;width&apos;:&apos;&#123;&#123;(starRating - 4)*100&#125;&#125;%&apos;&#125;&quot;&gt;&lt;/span&gt; &lt;/span&gt; &lt;span&gt;&#123;&#123;starRating&#125;&#125;&lt;/span&gt; &lt;/span&gt;&lt;/div&gt; 相关CSS1234567891011121314151617181920212223.starwrapper .fa &#123; position: relative;&#125;.starwrapper .fa-star &#123; color: #0edb73;&#125;.starwrapper .fa-star-open &#123; color: #cacaca;&#125;.fa-star-percentage &#123; color: #CCCCCC&#125;.starwrapper .fa-star-percentage &#123; position: absolute; top: 0; overflow: hidden; margin: 0px !important; left: 0;&#125; 之后在需要显示评分的页面加入1&lt;htc-star star-rating=&apos;&#123;&#123;p.StarRating&#125;&#125;&apos;&gt;&lt;/htc-star&gt; 即可显示最终效果：","categories":[{"name":"IT技术相关","slug":"IT技术相关","permalink":"http://shenweihui.cn/categories/IT技术相关/"}],"tags":[{"name":"AngularJs","slug":"AngularJs","permalink":"http://shenweihui.cn/tags/AngularJs/"}]},{"title":"张信哲-《初恋的地方》","slug":"the-place-of-first-love","date":"2019-04-18T04:48:53.000Z","updated":"2019-04-18T07:10:32.041Z","comments":true,"path":"2019/04/18/the-place-of-first-love/","link":"","permalink":"http://shenweihui.cn/2019/04/18/the-place-of-first-love/","excerpt":"","text":"最近偶然间在广播里听到哲哲的一首新歌，说新歌只是对自己而言的，毕竟是第一次听到，感觉很柔美，符合当下自己的品味。于是进入老套路：搜歌-&gt;单曲循环-&gt;搜谱但貌似不是某人的菜，还说我老人了，可不是么，确实是跟哲哲一样老年人了 😹Anyway I like it. 顺带把邓丽君的原版以及王菲的版本也都欣赏了一遍，感觉还是各有特色。","categories":[{"name":"随笔","slug":"随笔","permalink":"http://shenweihui.cn/categories/随笔/"}],"tags":[{"name":"life","slug":"life","permalink":"http://shenweihui.cn/tags/life/"},{"name":"music","slug":"music","permalink":"http://shenweihui.cn/tags/music/"}]},{"title":"💗欢迎访问M&S💗","slug":"welcome","date":"2019-04-08T07:44:30.000Z","updated":"2019-04-18T07:48:12.334Z","comments":true,"path":"2019/04/08/welcome/","link":"","permalink":"http://shenweihui.cn/2019/04/08/welcome/","excerpt":"","text":"亲，欢迎访问M&amp;S的Blog！这里将会记录我们生活的点滴，欢迎评论！The site is created by Max with 💗!","categories":[{"name":"随笔","slug":"随笔","permalink":"http://shenweihui.cn/categories/随笔/"}],"tags":[{"name":"life","slug":"life","permalink":"http://shenweihui.cn/tags/life/"},{"name":"gossip","slug":"gossip","permalink":"http://shenweihui.cn/tags/gossip/"}]}]}